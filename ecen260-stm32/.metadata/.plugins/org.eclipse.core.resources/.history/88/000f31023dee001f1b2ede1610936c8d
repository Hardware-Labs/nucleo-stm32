/*
 * drivers.c
 *
 *  Created on: Feb 18, 2025
 *      Author: young
 */

////////////////////// function definitions /////////////////////////////

#include "drivers.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////////
// enables the clock for GPIOA, GPIOB, and GPIOC
////////////////////////////////////////////////////////////////////////////////////////////////////////////
void GPIOA_ClkEnable(void) {
	*AHB2ENR |= 0b001; // set bit 0 for Port A
}

void GPIOB_ClkEnable(void) {
	*AHB2ENR |= 0b010; // set bit 1 for Port B
}

void GPIOC_ClkEnable(void) {
	*AHB2ENR |= 0b100; // set bit 2 for Port C
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
// configure MODER of a given port for a given pin as an input or output
// - mode: GPIO_MODE_INPUT, GPIO_MODE_OUTPUT
////////////////////////////////////////////////////////////////////////////////////////////////////////////
void GPIO_Mode(Port* GPIOx, uint32_t pin, uint32_t mode) {
	switch (mode) {
	case GPIO_MODE_INPUT:
		// TODO
		break;
	case GPIO_MODE_OUTPUT:
		// output is 01 for the pin in MODER
		uint32_t temp = GPIOx->MODER;	// read the MODER
		temp &= ~UBIT(pin); 	// reset upper bit
		temp |= LBIT(pin); 		// set lower bit
		GPIOx->MODER = temp; 	// clock in entire configuration in 1 clock cycle to avoid glitches
		break;
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
// toggle the value of a given output pin of given port
////////////////////////////////////////////////////////////////////////////////////////////////////////////
void GPIO_Toggle(Port* GPIOx, uint32_t pin) {
	GPIOx->ODR ^= (BIT(pin)); // toggle the bit
}

