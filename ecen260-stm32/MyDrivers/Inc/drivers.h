/*
 * drivers.h
 *
 *  Created on: Feb 18, 2025
 *      Author: young
 */

#ifndef DRIVERS_H_
#define DRIVERS_H_

#include <stdint.h> // include standard integer library

////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GPIO Port structure
////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct {
    uint32_t MODER;   // offset: 0x00
    uint32_t OTYPER;  // offset: 0x04
    uint32_t OSPEEDR; // offset: 0x08
    uint32_t PUPDR;   // offset: 0x0C
    uint32_t IDR;     // offset: 0x10
    uint32_t ODR;     // offset: 0x14
} Port;

////////////////////////////////////////////////////////////////////////////////////////////////////////////
// address definitions
////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Address of the Advanced High-performance Bus 2 Enable Register
#define AHB2ENR ((uint32_t*) 0x4002104c)

// Base addresses of the GPIO Port control registers (SFRs)
#define GPIOA ((Port*) 0x48000000) // base address of GPIOA
#define GPIOB ((Port*) 0x48000400) // base address of GPIOB
#define GPIOC ((Port*) 0x48000800) // base address of GPIOC


////////////////////////////////////////////////////////////////////////////////////////////////////////////
// function prototypes
////////////////////////////////////////////////////////////////////////////////////////////////////////////
void GPIOA_ClkEnable(void);
void GPIOB_ClkEnable(void);
void GPIOC_ClkEnable(void);
void GPIO_Mode(Port* GPIOx, uint32_t pin, uint32_t mode);
void GPIO_Toggle(Port* GPIOx, uint32_t pin);
void GPIO_WritePin(Port* GPIOx, uint32_t pin, uint32_t state);
void GPIO_Pull(Port* GPIOx, uint32_t pin, uint32_t pull);
uint32_t GPIO_ReadPin(Port* GPIOx, uint32_t pin);


////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Value macros for MODER and PUPDR
////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MODER
#define GPIO_MODE_INPUT  0
#define GPIO_MODE_OUTPUT 1

// PUPDR
#define GPIO_NOPULL   0
#define GPIO_PULLUP   1
#define GPIO_PULLDOWN 2


////////////////////////////////////////////////////////////////////////////////////////////////////////////
// bitmask macros
////////////////////////////////////////////////////////////////////////////////////////////////////////////
#define BIT(x) (1 << x)				// bit on position
#define BITPAIR(x) (0b11 << (x*2))	// pair of bits
#define UBIT(x) (0b10 << (x*2))		// upper bit in pair
#define LBIT(x) (0b01 << (x*2))		// lower bit in pair

#endif /* DRIVERS_H_ */
